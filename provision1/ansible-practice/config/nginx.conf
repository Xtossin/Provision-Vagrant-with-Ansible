user nginx nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
}

http {
    
    # nginx config
    
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    keepalive_timeout 65;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparam.pem;

    # https://scotthelme.co.uk/https-cheat-sheet/
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    ssl_ecdh_curve secp384r1;
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    resolver 8.8.8.8 8.8.4.4 valid=300s; # google dns resolvers
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    ###
    # proxy to force TLS and to forward traffic to runit
    ##
    upstream runit {
        server localhost:8000;
    }

    server {
        location / {
            proxy_pass http://runit;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
        }
        listen 443 ssl;
        ssl_certificate /etc/nginx/cert/self-signed.crt;
        ssl_certificate_key /etc/nginx/cert/self-signed.key;
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }
}
